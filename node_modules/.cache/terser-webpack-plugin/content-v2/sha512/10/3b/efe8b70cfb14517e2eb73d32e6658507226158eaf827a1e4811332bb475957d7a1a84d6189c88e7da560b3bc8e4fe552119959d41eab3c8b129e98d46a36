{"map":"{\"version\":3,\"sources\":[\"/Users/jefferyz/find_jobs/node_modules/intl-messageformat/src/utils.js\",\"/Users/jefferyz/find_jobs/node_modules/intl-messageformat/src/es5.js\",\"/Users/jefferyz/find_jobs/node_modules/intl-messageformat/src/compiler.js\",\"/Users/jefferyz/find_jobs/node_modules/intl-messageformat/src/core.js\",\"/Users/jefferyz/find_jobs/node_modules/intl-messageformat/src/en.js\",\"/Users/jefferyz/find_jobs/node_modules/intl-messageformat/src/main.js\"],\"names\":[\"hop\",\"Object\",\"prototype\",\"hasOwnProperty\",\"extend\",\"obj\",\"i\",\"len\",\"source\",\"key\",\"sources\",\"Array\",\"slice\",\"call\",\"arguments\",\"length\",\"realDefineProp\",\"defineProperty\",\"e\",\"__defineGetter__\",\"name\",\"desc\",\"get\",\"value\",\"objCreate\",\"create\",\"proto\",\"props\",\"k\",\"F\",\"src_compiler\",\"Compiler\",\"locales\",\"formats\",\"pluralFn\",\"this\",\"StringFormat\",\"id\",\"PluralFormat\",\"useOrdinal\",\"offset\",\"options\",\"PluralOffsetString\",\"numberFormat\",\"string\",\"SelectFormat\",\"compile\",\"ast\",\"pluralStack\",\"currentPlural\",\"pluralNumberFormat\",\"compileMessage\",\"type\",\"Error\",\"element\",\"elements\",\"pattern\",\"push\",\"compileMessageText\",\"compileArgument\",\"test\",\"Intl\",\"NumberFormat\",\"format\",\"replace\",\"number\",\"style\",\"date\",\"DateTimeFormat\",\"time\",\"compileOptions\",\"ordinal\",\"option\",\"optionsHash\",\"selector\",\"pop\",\"String\",\"getOption\",\"other\",\"core\",\"MessageFormat\",\"message\",\"__parse\",\"TypeError\",\"_mergeFormats\",\"_resolveLocale\",\"_findPluralRuleFunction\",\"_locale\",\"_compilePattern\",\"messageFormat\",\"values\",\"_format\",\"variableId\",\"enumerable\",\"currency\",\"percent\",\"short\",\"month\",\"day\",\"year\",\"medium\",\"long\",\"full\",\"weekday\",\"hour\",\"minute\",\"second\",\"timeZoneName\",\"data\",\"locale\",\"__localeData__\",\"toLowerCase\",\"parser\",\"parse\",\"writable\",\"undefined\",\"resolvedOptions\",\"localeData\",\"pluralRuleFunction\",\"parentLocale\",\"part\",\"err\",\"result\",\"defaults\",\"mergedType\",\"mergedFormats\",\"concat\",\"defaultLocale\",\"localeParts\",\"split\",\"join\",\"en\",\"n\",\"ord\",\"s\",\"v0\",\"t0\",\"Number\",\"n10\",\"n100\",\"__addLocaleData\",\"__webpack_exports__\"],\"mappings\":\"6GAQO,IAAAA,EAAAC,OAAAC,UAAAC,eAEA,SAAAC,EAAAC,GACP,IACAC,EAAAC,EAAAC,EAAAC,EADAC,EAAAC,MAAAT,UAAAU,MAAAC,KAAAC,UAAA,GAGA,IAAAR,EAAA,EAAAC,EAAAG,EAAAK,OAAqCT,EAAAC,EAASD,GAAA,EAE9C,GADAE,EAAAE,EAAAJ,GAGA,IAAAG,KAAAD,EACAR,EAAAa,KAAAL,EAAAC,KACAJ,EAAAI,GAAAD,EAAAC,IAKA,OAAAJ,ECZA,IAAAW,EAAA,WACA,IAAS,QAAAf,OAAAgB,eAAA,GAAkC,IAAA,IAC3C,MAAAC,GAAe,OAAA,GAFf,GAOAD,IAFAD,GAAAf,OAAAC,UAAAiB,iBAEAH,EAAAf,OAAAgB,eACA,SAAAZ,EAAAe,EAAAC,GAEA,QAAAA,GAAAhB,EAAAc,iBACAd,EAAAc,iBAAAC,EAAAC,EAAAC,OACgBtB,EAAGa,KAAAR,EAAAe,IAAA,UAAAC,KACnBhB,EAAAe,GAAAC,EAAAE,SAIAC,EAAAvB,OAAAwB,QAAA,SAAAC,EAAAC,GACA,IAAAtB,EAAAuB,EAEA,SAAAC,KAIA,IAAAD,KAHAC,EAAA3B,UAAAwB,EACArB,EAAA,IAAAwB,EAEAF,EACY3B,EAAGa,KAAAc,EAAAC,IACfX,EAAAZ,EAAAuB,EAAAD,EAAAC,IAIA,OAAAvB,GCnCeyB,EAAA,EAEf,SAAAC,EAAAC,EAAAC,EAAAC,GACAC,KAAAH,QAAAA,EACAG,KAAAF,QAAAA,EACAE,KAAAD,SAAAA,EA4IA,SAAAE,EAAAC,GACAF,KAAAE,GAAAA,EAWA,SAAAC,EAAAD,EAAAE,EAAAC,EAAAC,EAAAP,GACAC,KAAAE,GAAAA,EACAF,KAAAI,WAAAA,EACAJ,KAAAK,OAAAA,EACAL,KAAAM,QAAAA,EACAN,KAAAD,SAAAA,EAYA,SAAAQ,EAAAL,EAAAG,EAAAG,EAAAC,GACAT,KAAAE,GAAAA,EACAF,KAAAK,OAAAA,EACAL,KAAAQ,aAAAA,EACAR,KAAAS,OAAAA,EAWA,SAAAC,EAAAR,EAAAI,GACAN,KAAAE,GAAAA,EACAF,KAAAM,QAAAA,EAvLAV,EAAA7B,UAAA4C,QAAA,SAAAC,GAKA,OAJAZ,KAAAa,YAAA,GACAb,KAAAc,cAAA,KACAd,KAAAe,mBAAA,KAEAf,KAAAgB,eAAAJ,IAGAhB,EAAA7B,UAAAiD,eAAA,SAAAJ,GACA,IAAAA,GAAA,yBAAAA,EAAAK,KACA,MAAA,IAAAC,MAAA,sDAGA,IAGA/C,EAAAC,EAAA+C,EAHAC,EAAAR,EAAAQ,SACAC,EAAA,GAIA,IAAAlD,EAAA,EAAAC,EAAAgD,EAAAxC,OAAsCT,EAAAC,EAASD,GAAA,EAG/C,QAFAgD,EAAAC,EAAAjD,IAEA8C,MACA,IAAA,qBACAI,EAAAC,KAAAtB,KAAAuB,mBAAAJ,IACA,MAEA,IAAA,kBACAE,EAAAC,KAAAtB,KAAAwB,gBAAAL,IACA,MAEA,QACA,MAAA,IAAAD,MAAA,8CAIA,OAAAG,GAGAzB,EAAA7B,UAAAwD,mBAAA,SAAAJ,GAIA,OAAAnB,KAAAc,eAAA,cAAAW,KAAAN,EAAA/B,QAGAY,KAAAe,qBACAf,KAAAe,mBAAA,IAAAW,KAAAC,aAAA3B,KAAAH,UAGA,IAAAU,EACAP,KAAAc,cAAAZ,GACAF,KAAAc,cAAAc,OAAAvB,OACAL,KAAAe,mBACAI,EAAA/B,QAIA+B,EAAA/B,MAAAyC,QAAA,OAAA,MAGAjC,EAAA7B,UAAAyD,gBAAA,SAAAL,GACA,IAAAS,EAAAT,EAAAS,OAEA,IAAAA,EACA,OAAA,IAAA3B,EAAAkB,EAAAjB,IAGA,IAGAI,EAHAR,EAAAE,KAAAF,QACAD,EAAAG,KAAAH,QACAE,EAAAC,KAAAD,SAGA,OAAA6B,EAAAX,MACA,IAAA,eAEA,OADAX,EAAAR,EAAAgC,OAAAF,EAAAG,OACA,CACA7B,GAAAiB,EAAAjB,GACA0B,OAAA,IAAAF,KAAAC,aAAA9B,EAAAS,GAAAsB,QAGA,IAAA,aAEA,OADAtB,EAAAR,EAAAkC,KAAAJ,EAAAG,OACA,CACA7B,GAAAiB,EAAAjB,GACA0B,OAAA,IAAAF,KAAAO,eAAApC,EAAAS,GAAAsB,QAGA,IAAA,aAEA,OADAtB,EAAAR,EAAAoC,KAAAN,EAAAG,OACA,CACA7B,GAAAiB,EAAAjB,GACA0B,OAAA,IAAAF,KAAAO,eAAApC,EAAAS,GAAAsB,QAGA,IAAA,eAEA,OADAtB,EAAAN,KAAAmC,eAAAhB,GACA,IAAAhB,EACAgB,EAAAjB,GAAA0B,EAAAQ,QAAAR,EAAAvB,OAAAC,EAAAP,GAGA,IAAA,eAEA,OADAO,EAAAN,KAAAmC,eAAAhB,GACA,IAAAT,EAAAS,EAAAjB,GAAAI,GAEA,QACA,MAAA,IAAAY,MAAA,uDAIAtB,EAAA7B,UAAAoE,eAAA,SAAAhB,GACA,IAUAhD,EAAAC,EAAAiE,EAVAT,EAAAT,EAAAS,OACAtB,EAAAsB,EAAAtB,QACAgC,EAAA,GAUA,IALAtC,KAAAa,YAAAS,KAAAtB,KAAAc,eACAd,KAAAc,cAAA,iBAAAc,EAAAX,KAAAE,EAAA,KAIAhD,EAAA,EAAAC,EAAAkC,EAAA1B,OAAqCT,EAAAC,EAASD,GAAA,EAI9CmE,GAHAD,EAAA/B,EAAAnC,IAGAoE,UAAAvC,KAAAgB,eAAAqB,EAAAjD,OAMA,OAFAY,KAAAc,cAAAd,KAAAa,YAAA2B,MAEAF,GASArC,EAAAlC,UAAA6D,OAAA,SAAAxC,GACA,OAAAA,GAAA,kBAAAA,EAIA,kBAAAA,EAAAA,EAAAqD,OAAArD,GAHA,IAcAe,EAAApC,UAAA2E,UAAA,SAAAtD,GACA,IAAAkB,EAAAN,KAAAM,QAKA,OAHAA,EAAA,IAAAlB,IACAkB,EAAAN,KAAAD,SAAAX,EAAAY,KAAAK,OAAAL,KAAAI,cAEAE,EAAAqC,OAUApC,EAAAxC,UAAA6D,OAAA,SAAAxC,GACA,IAAA0C,EAAA9B,KAAAQ,aAAAoB,OAAAxC,EAAAY,KAAAK,QAEA,OAAAL,KAAAS,OACAoB,QAAA,cAAA,KAAAC,GACAD,QAAA,OAAA,MAQAnB,EAAA3C,UAAA2E,UAAA,SAAAtD,GACA,IAAAkB,EAAAN,KAAAM,QACA,OAAAA,EAAAlB,IAAAkB,EAAAqC,uCC/LeC,EAAA,EAIf,SAAAC,EAAAC,EAAAjD,EAAAC,GAEA,IAAAc,EAAA,kBAAAkC,EACAD,EAAAE,QAAAD,GAAAA,EAEA,IAAAlC,GAAA,yBAAAA,EAAAK,KACA,MAAA,IAAA+B,UAAA,kDAKAlD,EAAAE,KAAAiD,cAAAJ,EAAA/C,QAAAA,GAGIhB,EAAckB,KAAA,UAAA,CAAoBZ,MAAAY,KAAAkD,eAAArD,KAKtC,IAAAE,EAAAC,KAAAmD,wBAAAnD,KAAAoD,SACA/B,EAAArB,KAAAqD,gBAAAzC,EAAAf,EAAAC,EAAAC,GAIAuD,EAAAtD,KACAA,KAAA4B,OAAA,SAAA2B,GACA,IACA,OAAAD,EAAAE,QAAAnC,EAAAkC,GACO,MAAAxE,GACP,MAAAA,EAAA0E,WACA,IAAAvC,MACA,qCAAAnC,EAAA0E,WAAA,qCACAX,EAAA,KAGA/D,IASAD,EAAc+D,EAAA,UAAA,CACda,YAAA,EAEAtE,MAAA,CACA0C,OAAA,CACA6B,SAAA,CACA5B,MAAA,YAGA6B,QAAA,CACA7B,MAAA,YAIAC,KAAA,CACA6B,MAAA,CACAC,MAAA,UACAC,IAAA,UACAC,KAAA,WAGAC,OAAA,CACAH,MAAA,QACAC,IAAA,UACAC,KAAA,WAGAE,KAAA,CACAJ,MAAA,OACAC,IAAA,UACAC,KAAA,WAGAG,KAAA,CACAC,QAAA,OACAN,MAAA,OACAC,IAAA,UACAC,KAAA,YAIA9B,KAAA,CACA2B,MAAA,CACAQ,KAAA,UACAC,OAAA,WAGAL,OAAA,CACAI,KAAA,UACAC,OAAA,UACAC,OAAA,WAGAL,KAAA,CACAG,KAAA,UACAC,OAAA,UACAC,OAAA,UACAC,aAAA,SAGAL,KAAA,CACAE,KAAA,UACAC,OAAA,UACAC,OAAA,UACAC,aAAA,aAOA1F,EAAc+D,EAAA,iBAAA,CAAmCzD,MAAOC,EAAS,QACjEP,EAAc+D,EAAA,kBAAA,CAAoCzD,MAAA,SAAAqF,GAClD,IAAAA,IAAAA,EAAAC,OACA,MAAA,IAAAxD,MACA,4EAKA2B,EAAA8B,eAAAF,EAAAC,OAAAE,eAAAH,KAIA3F,EAAc+D,EAAA,UAAA,CAA4BzD,MAAOyF,EAAA,EAAMC,QAIvDhG,EAAc+D,EAAA,gBAAA,CACda,YAAA,EACAqB,UAAA,EACA3F,WAAA4F,IAGAnC,EAAA9E,UAAAkH,gBAAA,WAEA,MAAA,CACAP,OAAA1E,KAAAoD,UAIAP,EAAA9E,UAAAsF,gBAAA,SAAAzC,EAAAf,EAAAC,EAAAC,GAEA,OADA,IAAuBJ,EAAQE,EAAAC,EAAAC,GAC/BY,QAAAC,IAGAiC,EAAA9E,UAAAoF,wBAAA,SAAAuB,GAMA,IALA,IAAAQ,EAAArC,EAAA8B,eACAF,EAAAS,EAAAR,EAAAE,eAIAH,GAAA,CACA,GAAAA,EAAAU,mBACA,OAAAV,EAAAU,mBAGAV,EAAAA,EAAAW,cAAAF,EAAAT,EAAAW,aAAAR,eAGA,MAAA,IAAA1D,MACA,iFACAwD,IAIA7B,EAAA9E,UAAAyF,QAAA,SAAAnC,EAAAkC,GACA,IACApF,EAAAC,EAAAiH,EAAAnF,EAAAd,EAAAkG,EADAC,EAAA,GAGA,IAAApH,EAAA,EAAAC,EAAAiD,EAAAzC,OAAqCT,EAAAC,EAASD,GAAA,EAI9C,GAAA,kBAHAkH,EAAAhE,EAAAlD,IAGA,CAQA,GAHA+B,EAAAmF,EAAAnF,IAGAqD,IAAwB1F,EAAGa,KAAA6E,EAAArD,GAG3B,MAFAoF,EAAA,IAAApE,MAAA,iCAAAhB,IACAuD,WAAAvD,EACAoF,EAGAlG,EAAAmE,EAAArD,GAKAmF,EAAA/E,QACAiF,GAAAvF,KAAAwD,QAAA6B,EAAA3C,UAAAtD,GAAAmE,GAEAgC,GAAAF,EAAAzD,OAAAxC,QArBAmG,GAAAF,EAyBA,OAAAE,GAGA1C,EAAA9E,UAAAkF,cAAA,SAAAuC,EAAA1F,GACA,IACAmB,EAAAwE,EADAC,EAAA,GAGA,IAAAzE,KAAAuE,EACa3H,EAAGa,KAAA8G,EAAAvE,KAEhByE,EAAAzE,GAAAwE,EAA2CpG,EAASmG,EAAAvE,IAEpDnB,GAAuBjC,EAAGa,KAAAoB,EAAAmB,IACdhD,EAAMwH,EAAA3F,EAAAmB,KAIlB,OAAAyE,GAGA7C,EAAA9E,UAAAmF,eAAA,SAAArD,GACA,kBAAAA,IACAA,EAAA,CAAAA,IAIAA,GAAAA,GAAA,IAAA8F,OAAA9C,EAAA+C,eAEA,IACAzH,EAAAC,EAAAyH,EAAApB,EADAS,EAAArC,EAAA8B,eAQA,IAAAxG,EAAA,EAAAC,EAAAyB,EAAAjB,OAAqCT,EAAAC,EAASD,GAAA,EAG9C,IAFA0H,EAAAhG,EAAA1B,GAAAyG,cAAAkB,MAAA,KAEAD,EAAAjH,QAAA,CAEA,GADA6F,EAAAS,EAAAW,EAAAE,KAAA,MAIA,OAAAtB,EAAAC,OAGAmB,EAAArD,MAIA,IAAAoD,EAAA/F,EAAA2C,MACA,MAAA,IAAAtB,MACA,2DACArB,EAAAkG,KAAA,MAAA,4BAAAH,IClRe,IAAAI,EAAA,CAACtB,OAAA,KAAAS,mBAAA,SAAAc,EAAAC,GAAoD,IAAAC,EAAA1D,OAAAwD,GAAAH,MAAA,KAAAM,GAAAD,EAAA,GAAAE,EAAAC,OAAAH,EAAA,KAAAF,EAAAM,EAAAF,GAAAF,EAAA,GAAA1H,OAAA,GAAA+H,EAAAH,GAAAF,EAAA,GAAA1H,OAAA,GAAsG,OAAAyH,EAAA,GAAAK,GAAA,IAAAC,EAAA,MAAA,GAAAD,GAAA,IAAAC,EAAA,MAAA,GAAAD,GAAA,IAAAC,EAAA,MAAA,QAA2F,GAAAP,GAAAG,EAAA,MAAA,UCIrQxD,EAAiB6D,gBAAiBT,GAClCpD,EAAiBgD,cAAA,KAEFc,EAAA,EAAA\",\"sourcesContent\":[\"/*\\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\\nCopyrights licensed under the New BSD License.\\nSee the accompanying LICENSE file for terms.\\n*/\\n\\n/* jslint esnext: true */\\n\\nexport var hop = Object.prototype.hasOwnProperty;\\n\\nexport function extend(obj) {\\n    var sources = Array.prototype.slice.call(arguments, 1),\\n        i, len, source, key;\\n\\n    for (i = 0, len = sources.length; i < len; i += 1) {\\n        source = sources[i];\\n        if (!source) { continue; }\\n\\n        for (key in source) {\\n            if (hop.call(source, key)) {\\n                obj[key] = source[key];\\n            }\\n        }\\n    }\\n\\n    return obj;\\n}\\n\",\"/*\\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\\nCopyrights licensed under the New BSD License.\\nSee the accompanying LICENSE file for terms.\\n*/\\n\\n/* jslint esnext: true */\\n\\nimport {hop} from './utils';\\n\\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\\n// Copyright 2013 Andy Earnshaw, MIT License\\n\\nvar realDefineProp = (function () {\\n    try { return !!Object.defineProperty({}, 'a', {}); }\\n    catch (e) { return false; }\\n})();\\n\\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\\n\\nvar defineProperty = realDefineProp ? Object.defineProperty :\\n        function (obj, name, desc) {\\n\\n    if ('get' in desc && obj.__defineGetter__) {\\n        obj.__defineGetter__(name, desc.get);\\n    } else if (!hop.call(obj, name) || 'value' in desc) {\\n        obj[name] = desc.value;\\n    }\\n};\\n\\nvar objCreate = Object.create || function (proto, props) {\\n    var obj, k;\\n\\n    function F() {}\\n    F.prototype = proto;\\n    obj = new F();\\n\\n    for (k in props) {\\n        if (hop.call(props, k)) {\\n            defineProperty(obj, k, props[k]);\\n        }\\n    }\\n\\n    return obj;\\n};\\n\\nexport {defineProperty, objCreate};\\n\",\"/*\\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\\nCopyrights licensed under the New BSD License.\\nSee the accompanying LICENSE file for terms.\\n*/\\n\\n/* jslint esnext: true */\\n\\nexport default Compiler;\\n\\nfunction Compiler(locales, formats, pluralFn) {\\n    this.locales  = locales;\\n    this.formats  = formats;\\n    this.pluralFn = pluralFn;\\n}\\n\\nCompiler.prototype.compile = function (ast) {\\n    this.pluralStack        = [];\\n    this.currentPlural      = null;\\n    this.pluralNumberFormat = null;\\n\\n    return this.compileMessage(ast);\\n};\\n\\nCompiler.prototype.compileMessage = function (ast) {\\n    if (!(ast && ast.type === 'messageFormatPattern')) {\\n        throw new Error('Message AST is not of type: \\\"messageFormatPattern\\\"');\\n    }\\n\\n    var elements = ast.elements,\\n        pattern  = [];\\n\\n    var i, len, element;\\n\\n    for (i = 0, len = elements.length; i < len; i += 1) {\\n        element = elements[i];\\n\\n        switch (element.type) {\\n            case 'messageTextElement':\\n                pattern.push(this.compileMessageText(element));\\n                break;\\n\\n            case 'argumentElement':\\n                pattern.push(this.compileArgument(element));\\n                break;\\n\\n            default:\\n                throw new Error('Message element does not have a valid type');\\n        }\\n    }\\n\\n    return pattern;\\n};\\n\\nCompiler.prototype.compileMessageText = function (element) {\\n    // When this `element` is part of plural sub-pattern and its value contains\\n    // an unescaped '#', use a `PluralOffsetString` helper to properly output\\n    // the number with the correct offset in the string.\\n    if (this.currentPlural && /(^|[^\\\\\\\\])#/g.test(element.value)) {\\n        // Create a cache a NumberFormat instance that can be reused for any\\n        // PluralOffsetString instance in this message.\\n        if (!this.pluralNumberFormat) {\\n            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);\\n        }\\n\\n        return new PluralOffsetString(\\n                this.currentPlural.id,\\n                this.currentPlural.format.offset,\\n                this.pluralNumberFormat,\\n                element.value);\\n    }\\n\\n    // Unescape the escaped '#'s in the message text.\\n    return element.value.replace(/\\\\\\\\#/g, '#');\\n};\\n\\nCompiler.prototype.compileArgument = function (element) {\\n    var format = element.format;\\n\\n    if (!format) {\\n        return new StringFormat(element.id);\\n    }\\n\\n    var formats  = this.formats,\\n        locales  = this.locales,\\n        pluralFn = this.pluralFn,\\n        options;\\n\\n    switch (format.type) {\\n        case 'numberFormat':\\n            options = formats.number[format.style];\\n            return {\\n                id    : element.id,\\n                format: new Intl.NumberFormat(locales, options).format\\n            };\\n\\n        case 'dateFormat':\\n            options = formats.date[format.style];\\n            return {\\n                id    : element.id,\\n                format: new Intl.DateTimeFormat(locales, options).format\\n            };\\n\\n        case 'timeFormat':\\n            options = formats.time[format.style];\\n            return {\\n                id    : element.id,\\n                format: new Intl.DateTimeFormat(locales, options).format\\n            };\\n\\n        case 'pluralFormat':\\n            options = this.compileOptions(element);\\n            return new PluralFormat(\\n                element.id, format.ordinal, format.offset, options, pluralFn\\n            );\\n\\n        case 'selectFormat':\\n            options = this.compileOptions(element);\\n            return new SelectFormat(element.id, options);\\n\\n        default:\\n            throw new Error('Message element does not have a valid format type');\\n    }\\n};\\n\\nCompiler.prototype.compileOptions = function (element) {\\n    var format      = element.format,\\n        options     = format.options,\\n        optionsHash = {};\\n\\n    // Save the current plural element, if any, then set it to a new value when\\n    // compiling the options sub-patterns. This conforms the spec's algorithm\\n    // for handling `\\\"#\\\"` syntax in message text.\\n    this.pluralStack.push(this.currentPlural);\\n    this.currentPlural = format.type === 'pluralFormat' ? element : null;\\n\\n    var i, len, option;\\n\\n    for (i = 0, len = options.length; i < len; i += 1) {\\n        option = options[i];\\n\\n        // Compile the sub-pattern and save it under the options's selector.\\n        optionsHash[option.selector] = this.compileMessage(option.value);\\n    }\\n\\n    // Pop the plural stack to put back the original current plural value.\\n    this.currentPlural = this.pluralStack.pop();\\n\\n    return optionsHash;\\n};\\n\\n// -- Compiler Helper Classes --------------------------------------------------\\n\\nfunction StringFormat(id) {\\n    this.id = id;\\n}\\n\\nStringFormat.prototype.format = function (value) {\\n    if (!value && typeof value !== 'number') {\\n        return '';\\n    }\\n\\n    return typeof value === 'string' ? value : String(value);\\n};\\n\\nfunction PluralFormat(id, useOrdinal, offset, options, pluralFn) {\\n    this.id         = id;\\n    this.useOrdinal = useOrdinal;\\n    this.offset     = offset;\\n    this.options    = options;\\n    this.pluralFn   = pluralFn;\\n}\\n\\nPluralFormat.prototype.getOption = function (value) {\\n    var options = this.options;\\n\\n    var option = options['=' + value] ||\\n            options[this.pluralFn(value - this.offset, this.useOrdinal)];\\n\\n    return option || options.other;\\n};\\n\\nfunction PluralOffsetString(id, offset, numberFormat, string) {\\n    this.id           = id;\\n    this.offset       = offset;\\n    this.numberFormat = numberFormat;\\n    this.string       = string;\\n}\\n\\nPluralOffsetString.prototype.format = function (value) {\\n    var number = this.numberFormat.format(value - this.offset);\\n\\n    return this.string\\n            .replace(/(^|[^\\\\\\\\])#/g, '$1' + number)\\n            .replace(/\\\\\\\\#/g, '#');\\n};\\n\\nfunction SelectFormat(id, options) {\\n    this.id      = id;\\n    this.options = options;\\n}\\n\\nSelectFormat.prototype.getOption = function (value) {\\n    var options = this.options;\\n    return options[value] || options.other;\\n};\\n\",\"/*\\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\\nCopyrights licensed under the New BSD License.\\nSee the accompanying LICENSE file for terms.\\n*/\\n\\n/* jslint esnext: true */\\n\\nimport {extend, hop} from './utils';\\nimport {defineProperty, objCreate} from './es5';\\nimport Compiler from './compiler';\\nimport parser from 'intl-messageformat-parser';\\n\\nexport default MessageFormat;\\n\\n// -- MessageFormat --------------------------------------------------------\\n\\nfunction MessageFormat(message, locales, formats) {\\n    // Parse string messages into an AST.\\n    var ast = typeof message === 'string' ?\\n            MessageFormat.__parse(message) : message;\\n\\n    if (!(ast && ast.type === 'messageFormatPattern')) {\\n        throw new TypeError('A message must be provided as a String or AST.');\\n    }\\n\\n    // Creates a new object with the specified `formats` merged with the default\\n    // formats.\\n    formats = this._mergeFormats(MessageFormat.formats, formats);\\n\\n    // Defined first because it's used to build the format pattern.\\n    defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});\\n\\n    // Compile the `ast` to a pattern that is highly optimized for repeated\\n    // `format()` invocations. **Note:** This passes the `locales` set provided\\n    // to the constructor instead of just the resolved locale.\\n    var pluralFn = this._findPluralRuleFunction(this._locale);\\n    var pattern  = this._compilePattern(ast, locales, formats, pluralFn);\\n\\n    // \\\"Bind\\\" `format()` method to `this` so it can be passed by reference like\\n    // the other `Intl` APIs.\\n    var messageFormat = this;\\n    this.format = function (values) {\\n      try {\\n        return messageFormat._format(pattern, values);\\n      } catch (e) {\\n        if (e.variableId) {\\n          throw new Error(\\n            'The intl string context variable \\\\'' + e.variableId + '\\\\'' +\\n            ' was not provided to the string \\\\'' + message + '\\\\''\\n          );\\n        } else {\\n          throw e;\\n        }\\n      }\\n    };\\n}\\n\\n// Default format options used as the prototype of the `formats` provided to the\\n// constructor. These are used when constructing the internal Intl.NumberFormat\\n// and Intl.DateTimeFormat instances.\\ndefineProperty(MessageFormat, 'formats', {\\n    enumerable: true,\\n\\n    value: {\\n        number: {\\n            'currency': {\\n                style: 'currency'\\n            },\\n\\n            'percent': {\\n                style: 'percent'\\n            }\\n        },\\n\\n        date: {\\n            'short': {\\n                month: 'numeric',\\n                day  : 'numeric',\\n                year : '2-digit'\\n            },\\n\\n            'medium': {\\n                month: 'short',\\n                day  : 'numeric',\\n                year : 'numeric'\\n            },\\n\\n            'long': {\\n                month: 'long',\\n                day  : 'numeric',\\n                year : 'numeric'\\n            },\\n\\n            'full': {\\n                weekday: 'long',\\n                month  : 'long',\\n                day    : 'numeric',\\n                year   : 'numeric'\\n            }\\n        },\\n\\n        time: {\\n            'short': {\\n                hour  : 'numeric',\\n                minute: 'numeric'\\n            },\\n\\n            'medium':  {\\n                hour  : 'numeric',\\n                minute: 'numeric',\\n                second: 'numeric'\\n            },\\n\\n            'long': {\\n                hour        : 'numeric',\\n                minute      : 'numeric',\\n                second      : 'numeric',\\n                timeZoneName: 'short'\\n            },\\n\\n            'full': {\\n                hour        : 'numeric',\\n                minute      : 'numeric',\\n                second      : 'numeric',\\n                timeZoneName: 'short'\\n            }\\n        }\\n    }\\n});\\n\\n// Define internal private properties for dealing with locale data.\\ndefineProperty(MessageFormat, '__localeData__', {value: objCreate(null)});\\ndefineProperty(MessageFormat, '__addLocaleData', {value: function (data) {\\n    if (!(data && data.locale)) {\\n        throw new Error(\\n            'Locale data provided to IntlMessageFormat is missing a ' +\\n            '`locale` property'\\n        );\\n    }\\n\\n    MessageFormat.__localeData__[data.locale.toLowerCase()] = data;\\n}});\\n\\n// Defines `__parse()` static method as an exposed private.\\ndefineProperty(MessageFormat, '__parse', {value: parser.parse});\\n\\n// Define public `defaultLocale` property which defaults to English, but can be\\n// set by the developer.\\ndefineProperty(MessageFormat, 'defaultLocale', {\\n    enumerable: true,\\n    writable  : true,\\n    value     : undefined\\n});\\n\\nMessageFormat.prototype.resolvedOptions = function () {\\n    // TODO: Provide anything else?\\n    return {\\n        locale: this._locale\\n    };\\n};\\n\\nMessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {\\n    var compiler = new Compiler(locales, formats, pluralFn);\\n    return compiler.compile(ast);\\n};\\n\\nMessageFormat.prototype._findPluralRuleFunction = function (locale) {\\n    var localeData = MessageFormat.__localeData__;\\n    var data       = localeData[locale.toLowerCase()];\\n\\n    // The locale data is de-duplicated, so we have to traverse the locale's\\n    // hierarchy until we find a `pluralRuleFunction` to return.\\n    while (data) {\\n        if (data.pluralRuleFunction) {\\n            return data.pluralRuleFunction;\\n        }\\n\\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\\n    }\\n\\n    throw new Error(\\n        'Locale data added to IntlMessageFormat is missing a ' +\\n        '`pluralRuleFunction` for :' + locale\\n    );\\n};\\n\\nMessageFormat.prototype._format = function (pattern, values) {\\n    var result = '',\\n        i, len, part, id, value, err;\\n\\n    for (i = 0, len = pattern.length; i < len; i += 1) {\\n        part = pattern[i];\\n\\n        // Exist early for string parts.\\n        if (typeof part === 'string') {\\n            result += part;\\n            continue;\\n        }\\n\\n        id = part.id;\\n\\n        // Enforce that all required values are provided by the caller.\\n        if (!(values && hop.call(values, id))) {\\n          err = new Error('A value must be provided for: ' + id);\\n          err.variableId = id;\\n          throw err;\\n        }\\n\\n        value = values[id];\\n\\n        // Recursively format plural and select parts' option — which can be a\\n        // nested pattern structure. The choosing of the option to use is\\n        // abstracted-by and delegated-to the part helper object.\\n        if (part.options) {\\n            result += this._format(part.getOption(value), values);\\n        } else {\\n            result += part.format(value);\\n        }\\n    }\\n\\n    return result;\\n};\\n\\nMessageFormat.prototype._mergeFormats = function (defaults, formats) {\\n    var mergedFormats = {},\\n        type, mergedType;\\n\\n    for (type in defaults) {\\n        if (!hop.call(defaults, type)) { continue; }\\n\\n        mergedFormats[type] = mergedType = objCreate(defaults[type]);\\n\\n        if (formats && hop.call(formats, type)) {\\n            extend(mergedType, formats[type]);\\n        }\\n    }\\n\\n    return mergedFormats;\\n};\\n\\nMessageFormat.prototype._resolveLocale = function (locales) {\\n    if (typeof locales === 'string') {\\n        locales = [locales];\\n    }\\n\\n    // Create a copy of the array so we can push on the default locale.\\n    locales = (locales || []).concat(MessageFormat.defaultLocale);\\n\\n    var localeData = MessageFormat.__localeData__;\\n    var i, len, localeParts, data;\\n\\n    // Using the set of locales + the default locale, we look for the first one\\n    // which that has been registered. When data does not exist for a locale, we\\n    // traverse its ancestors to find something that's been registered within\\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\\n    // here, we must take a naive approach to traversal.\\n    for (i = 0, len = locales.length; i < len; i += 1) {\\n        localeParts = locales[i].toLowerCase().split('-');\\n\\n        while (localeParts.length) {\\n            data = localeData[localeParts.join('-')];\\n            if (data) {\\n                // Return the normalized locale string; e.g., we return \\\"en-US\\\",\\n                // instead of \\\"en-us\\\".\\n                return data.locale;\\n            }\\n\\n            localeParts.pop();\\n        }\\n    }\\n\\n    var defaultLocale = locales.pop();\\n    throw new Error(\\n        'No locale data has been added to IntlMessageFormat for: ' +\\n        locales.join(', ') + ', or the default locale: ' + defaultLocale\\n    );\\n};\\n\",\"// GENERATED FILE\\nexport default {\\\"locale\\\":\\\"en\\\",\\\"pluralRuleFunction\\\":function (n,ord){var s=String(n).split(\\\".\\\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\\\"one\\\":n10==2&&n100!=12?\\\"two\\\":n10==3&&n100!=13?\\\"few\\\":\\\"other\\\";return n==1&&v0?\\\"one\\\":\\\"other\\\"}};\\n\",\"/* jslint esnext: true */\\n\\nimport IntlMessageFormat from './core';\\nimport defaultLocale from './en';\\n\\nIntlMessageFormat.__addLocaleData(defaultLocale);\\nIntlMessageFormat.defaultLocale = 'en';\\n\\nexport default IntlMessageFormat;\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{\"4b4be16f21cb4a9c42d0\":function(e,t,r){\"use strict\";var o=Object.prototype.hasOwnProperty;function a(e){var t,r,a,n,i=Array.prototype.slice.call(arguments,1);for(t=0,r=i.length;t<r;t+=1)if(a=i[t])for(n in a)o.call(a,n)&&(e[n]=a[n]);return e}var n=function(){try{return!!Object.defineProperty({},\"a\",{})}catch(e){return!1}}(),i=(!n&&Object.prototype.__defineGetter__,n?Object.defineProperty:function(e,t,r){\"get\"in r&&e.__defineGetter__?e.__defineGetter__(t,r.get):(!o.call(e,t)||\"value\"in r)&&(e[t]=r.value)}),l=Object.create||function(e,t){var r,a;function n(){}for(a in n.prototype=e,r=new n,t)o.call(t,a)&&i(r,a,t[a]);return r},s=u;function u(e,t,r){this.locales=e,this.formats=t,this.pluralFn=r}function c(e){this.id=e}function m(e,t,r,o,a){this.id=e,this.useOrdinal=t,this.offset=r,this.options=o,this.pluralFn=a}function p(e,t,r,o){this.id=e,this.offset=t,this.numberFormat=r,this.string=o}function f(e,t){this.id=e,this.options=t}u.prototype.compile=function(e){return this.pluralStack=[],this.currentPlural=null,this.pluralNumberFormat=null,this.compileMessage(e)},u.prototype.compileMessage=function(e){if(!e||\"messageFormatPattern\"!==e.type)throw new Error('Message AST is not of type: \"messageFormatPattern\"');var t,r,o,a=e.elements,n=[];for(t=0,r=a.length;t<r;t+=1)switch((o=a[t]).type){case\"messageTextElement\":n.push(this.compileMessageText(o));break;case\"argumentElement\":n.push(this.compileArgument(o));break;default:throw new Error(\"Message element does not have a valid type\")}return n},u.prototype.compileMessageText=function(e){return this.currentPlural&&/(^|[^\\\\])#/g.test(e.value)?(this.pluralNumberFormat||(this.pluralNumberFormat=new Intl.NumberFormat(this.locales)),new p(this.currentPlural.id,this.currentPlural.format.offset,this.pluralNumberFormat,e.value)):e.value.replace(/\\\\#/g,\"#\")},u.prototype.compileArgument=function(e){var t=e.format;if(!t)return new c(e.id);var r,o=this.formats,a=this.locales,n=this.pluralFn;switch(t.type){case\"numberFormat\":return r=o.number[t.style],{id:e.id,format:new Intl.NumberFormat(a,r).format};case\"dateFormat\":return r=o.date[t.style],{id:e.id,format:new Intl.DateTimeFormat(a,r).format};case\"timeFormat\":return r=o.time[t.style],{id:e.id,format:new Intl.DateTimeFormat(a,r).format};case\"pluralFormat\":return r=this.compileOptions(e),new m(e.id,t.ordinal,t.offset,r,n);case\"selectFormat\":return r=this.compileOptions(e),new f(e.id,r);default:throw new Error(\"Message element does not have a valid format type\")}},u.prototype.compileOptions=function(e){var t,r,o,a=e.format,n=a.options,i={};for(this.pluralStack.push(this.currentPlural),this.currentPlural=\"pluralFormat\"===a.type?e:null,t=0,r=n.length;t<r;t+=1)i[(o=n[t]).selector]=this.compileMessage(o.value);return this.currentPlural=this.pluralStack.pop(),i},c.prototype.format=function(e){return e||\"number\"===typeof e?\"string\"===typeof e?e:String(e):\"\"},m.prototype.getOption=function(e){var t=this.options;return t[\"=\"+e]||t[this.pluralFn(e-this.offset,this.useOrdinal)]||t.other},p.prototype.format=function(e){var t=this.numberFormat.format(e-this.offset);return this.string.replace(/(^|[^\\\\])#/g,\"$1\"+t).replace(/\\\\#/g,\"#\")},f.prototype.getOption=function(e){var t=this.options;return t[e]||t.other};var h=r(\"0b79d276b0081e82ce4d\"),d=y;function y(e,t,r){var o=\"string\"===typeof e?y.__parse(e):e;if(!o||\"messageFormatPattern\"!==o.type)throw new TypeError(\"A message must be provided as a String or AST.\");r=this._mergeFormats(y.formats,r),i(this,\"_locale\",{value:this._resolveLocale(t)});var a=this._findPluralRuleFunction(this._locale),n=this._compilePattern(o,t,r,a),l=this;this.format=function(t){try{return l._format(n,t)}catch(t){throw t.variableId?new Error(\"The intl string context variable '\"+t.variableId+\"' was not provided to the string '\"+e+\"'\"):t}}}i(y,\"formats\",{enumerable:!0,value:{number:{currency:{style:\"currency\"},percent:{style:\"percent\"}},date:{short:{month:\"numeric\",day:\"numeric\",year:\"2-digit\"},medium:{month:\"short\",day:\"numeric\",year:\"numeric\"},long:{month:\"long\",day:\"numeric\",year:\"numeric\"},full:{weekday:\"long\",month:\"long\",day:\"numeric\",year:\"numeric\"}},time:{short:{hour:\"numeric\",minute:\"numeric\"},medium:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\"},long:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\",timeZoneName:\"short\"},full:{hour:\"numeric\",minute:\"numeric\",second:\"numeric\",timeZoneName:\"short\"}}}}),i(y,\"__localeData__\",{value:l(null)}),i(y,\"__addLocaleData\",{value:function(e){if(!e||!e.locale)throw new Error(\"Locale data provided to IntlMessageFormat is missing a `locale` property\");y.__localeData__[e.locale.toLowerCase()]=e}}),i(y,\"__parse\",{value:h.a.parse}),i(y,\"defaultLocale\",{enumerable:!0,writable:!0,value:void 0}),y.prototype.resolvedOptions=function(){return{locale:this._locale}},y.prototype._compilePattern=function(e,t,r,o){return new s(t,r,o).compile(e)},y.prototype._findPluralRuleFunction=function(e){for(var t=y.__localeData__,r=t[e.toLowerCase()];r;){if(r.pluralRuleFunction)return r.pluralRuleFunction;r=r.parentLocale&&t[r.parentLocale.toLowerCase()]}throw new Error(\"Locale data added to IntlMessageFormat is missing a `pluralRuleFunction` for :\"+e)},y.prototype._format=function(e,t){var r,a,n,i,l,s,u=\"\";for(r=0,a=e.length;r<a;r+=1)if(\"string\"!==typeof(n=e[r])){if(i=n.id,!t||!o.call(t,i))throw(s=new Error(\"A value must be provided for: \"+i)).variableId=i,s;l=t[i],n.options?u+=this._format(n.getOption(l),t):u+=n.format(l)}else u+=n;return u},y.prototype._mergeFormats=function(e,t){var r,n,i={};for(r in e)o.call(e,r)&&(i[r]=n=l(e[r]),t&&o.call(t,r)&&a(n,t[r]));return i},y.prototype._resolveLocale=function(e){\"string\"===typeof e&&(e=[e]),e=(e||[]).concat(y.defaultLocale);var t,r,o,a,n=y.__localeData__;for(t=0,r=e.length;t<r;t+=1)for(o=e[t].toLowerCase().split(\"-\");o.length;){if(a=n[o.join(\"-\")])return a.locale;o.pop()}var i=e.pop();throw new Error(\"No locale data has been added to IntlMessageFormat for: \"+e.join(\", \")+\", or the default locale: \"+i)};var g={locale:\"en\",pluralRuleFunction:function(e,t){var r=String(e).split(\".\"),o=!r[1],a=Number(r[0])==e,n=a&&r[0].slice(-1),i=a&&r[0].slice(-2);return t?1==n&&11!=i?\"one\":2==n&&12!=i?\"two\":3==n&&13!=i?\"few\":\"other\":1==e&&o?\"one\":\"other\"}};d.__addLocaleData(g),d.defaultLocale=\"en\";t.a=d}}]);","extractedComments":[]}